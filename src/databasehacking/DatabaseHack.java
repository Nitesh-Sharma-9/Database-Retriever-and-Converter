/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package databasehacking;

import java.io.FileWriter;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Iterator;
import java.util.Set;
import java.util.TreeSet;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/**
 *
 * @author RS
 */
public class DatabaseHack extends javax.swing.JFrame {

    /**
     * Creates new form DatabaseHack
     */
    String opt;
     String tname,sql="",sql1="";
    private String User;
    /**
     * Creates new form DatabaseHack
     */
    private String Pass;
    /**
     * Creates new form DatabaseHack
     */
    ButtonGroup group=new ButtonGroup();
    private String Host;
    public DatabaseHack() {
        initComponents();
        group.add(jRadioButton1);
        group.add(jRadioButton3);
        group.add(jRadioButton4);
        group.add(jRadioButton5);
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbUsers = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cmbTables = new javax.swing.JComboBox();
        jRadioButton1 = new javax.swing.JRadioButton();
        jButton3 = new javax.swing.JButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jButton4 = new javax.swing.JButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Database Hacking System");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Users");

        cmbUsers.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbUsers.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbUsersItemStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Tables");

        cmbTables.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jRadioButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioButton1.setText("Create Statement");
        jRadioButton1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton1ItemStateChanged(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton3.setText("Print");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jRadioButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioButton3.setText("Insert Statement");
        jRadioButton3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton3ItemStateChanged(evt);
            }
        });
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton4.setText("Print");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jRadioButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioButton4.setText("Records");
        jRadioButton4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton4ItemStateChanged(evt);
            }
        });

        jRadioButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioButton5.setText("Create All");
        jRadioButton5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton5ItemStateChanged(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton5.setText("Print");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton7.setText("Print");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(142, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton4)
                            .addComponent(jRadioButton5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmbTables, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(cmbTables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton5)
                    .addComponent(jButton5))
                .addContainerGap(101, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbUsersItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbUsersItemStateChanged
       
        try{
                Connection con=db.Admin.connect(getUser(),getPass(), getHost());
                DatabaseHack obj=new DatabaseHack();
                DatabaseMetaData dm = con.getMetaData(); // dm hold the connection object meta data
                String types[] = {"TABLE"};  // "VIEW","SYNONYM"}; 
                         // catalog-path,schema,table,types 
                //   ResultSet rs = dm.getTables(null,null, "EMP", types);
                ResultSet rs = dm.getTables(null,cmbUsers.getSelectedItem().toString(), null, types);
                ResultSetMetaData mt = rs.getMetaData();
                //for(int i=1;i<=mt.getColumnCount();i++)
                      //System.out.printf("%-12s | ",mt.getColumnName(i));
                cmbTables.removeAllItems();
                cmbTables.addItem("Select Table");
                while(rs.next())
                {
                     //System.out.println();
                     //for(int i=1;i<=mt.getColumnCount();i++)
                    //System.out.printf("%-12s | ",rs.getString(i));
                    cmbTables.addItem(rs.getString(3));
                }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, ""+e.getMessage(),"Database Hacking System",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_cmbUsersItemStateChanged

    private void jRadioButton1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton1ItemStateChanged
         opt="Create";
    }//GEN-LAST:event_jRadioButton1ItemStateChanged

    private void jRadioButton3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton3ItemStateChanged
        opt="Insert";
    }//GEN-LAST:event_jRadioButton3ItemStateChanged

    private void jRadioButton4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton4ItemStateChanged
        opt="Records";
    }//GEN-LAST:event_jRadioButton4ItemStateChanged

    private void jRadioButton5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton5ItemStateChanged
        // TODO add your handling code here:
        opt="CreateAll";
    }//GEN-LAST:event_jRadioButton5ItemStateChanged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
     if(opt.equals("CreateAll"))
     {
         try
     {
        PrintWriter w = new PrintWriter(new FileWriter("Data.sql")); 
        Connection con=db.Admin.connect(getUser(),getPass(), getHost());
        DatabaseMetaData dm = con.getMetaData(); // dm hold the connection object meta data
        String types[] = {"TABLE"};  // "VIEW","SYNONYM"}; 
                         // catalog-path,scheme,table,types 
        ResultSet rs = dm.getTables(null,cmbUsers.getSelectedItem().toString(), null, types);
       
        while(rs.next())
        {
           tname = rs.getString(3); 
           sql =sql+"create table "+tname+"\n(\n";
           
           Statement s = con.createStatement();
           ResultSet r = s.executeQuery("select * from "+tname); 
           ResultSetMetaData mt = r.getMetaData();
           for(int i=1;i<=mt.getColumnCount();i++)
           {
             if(i<mt.getColumnCount())  
              sql+="      "+mt.getColumnName(i)+"  "+mt.getColumnTypeName(i)+"("+mt.getPrecision(i)+"),\n";
             else
              sql+="      "+mt.getColumnName(i)+"  "+mt.getColumnTypeName(i)+"("+mt.getPrecision(i)+")\n";
           }
           sql+=");\n";

           /*System.out.println("-------"+tname+" table Data ------");
           for(int i=1;i<=mt.getColumnCount();i++)
             System.out.printf("%-10s | ",mt.getColumnName(i));
           while(r.next())
           {
              System.out.println();
              for(int i=1;i<=mt.getColumnCount();i++)
               System.out.printf("%-10s | ",r.getString(i));
           }*/   
        }
           w.println(sql);
           //System.out.println(sql);
           PrintFrame ob=new PrintFrame();
           ob.addText(sql);
           ob.setVisible(true);
        w.close();
     }catch(Exception ex) {}

     }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if(opt.equals("Create"))
        {
        try
     {
        PrintWriter w = new PrintWriter(new FileWriter("Data.sql")); 
        Connection con=db.Admin.connect(getUser(),getPass(), getHost());
        //DatabaseMetaData dm = con.getMetaData(); // dm hold the connection object meta data
       // String types[] = {"TABLE"};  // "VIEW","SYNONYM"}; 
                         // catalog-path,scheme,table,types 
        //ResultSet rs = dm.getTables(null,cmbUsers.getSelectedItem().toString(), null, types);
        String tname,sql;
       // tname = rs.getString(3); 
           sql = "create table "+cmbTables.getSelectedItem().toString()+"\n(\n";
           
           Statement s = con.createStatement();
           ResultSet r = s.executeQuery("select * from "+cmbTables.getSelectedItem().toString()); 
           ResultSetMetaData mt = r.getMetaData();
           for(int i=1;i<=mt.getColumnCount();i++)
           {
             if(i<mt.getColumnCount())  
              sql+="      "+mt.getColumnName(i)+"  "+mt.getColumnTypeName(i)+"("+mt.getPrecision(i)+"),\n";
             else
              sql+="      "+mt.getColumnName(i)+"  "+mt.getColumnTypeName(i)+"("+mt.getPrecision(i)+")\n";
           }
           sql+=");\n";
           w.println(sql);
           //System.out.println(sql);
           PrintFrame ob=new PrintFrame();
           ob.addText(sql);
           ob.setVisible(true);
           /*System.out.println("-------"+tname+" table Data ------");
           for(int i=1;i<=mt.getColumnCount();i++)
             System.out.printf("%-10s | ",mt.getColumnName(i));
           while(r.next())
           {
              System.out.println();
              for(int i=1;i<=mt.getColumnCount();i++)
               System.out.printf("%-10s | ",r.getString(i));
           }*/   
        
        w.close();
     }catch(Exception ex) {}
    }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        if(opt.equals("Insert"))
        {
               try
     {
        PrintWriter w = new PrintWriter(new FileWriter("Data.sql")); 
        Connection con=db.Admin.connect(getUser(),getPass(), getHost());
        //DatabaseMetaData dm = con.getMetaData(); // dm hold the connection object meta data
       // String types[] = {"TABLE"};  // "VIEW","SYNONYM"}; 
                         // catalog-path,scheme,table,types 
        //ResultSet rs = dm.getTables(null,cmbUsers.getSelectedItem().toString(), null, types);
          sql="";
       // tname = rs.getString(3); 
           sql = "insert into  "+cmbTables.getSelectedItem().toString()+" values(";
           
           Statement ste = con.createStatement();
           ResultSet res = ste.executeQuery("select * from "+cmbTables.getSelectedItem().toString());
           ResultSetMetaData mt = res.getMetaData();
           //int i=1;
           while(res.next())
           {
              // System.out.println(mt.getColumnCount()+" "+i);
               sql = "insert into  "+cmbTables.getSelectedItem().toString()+" values(";
              for(int j=1;j<=mt.getColumnCount();j++)
              {
               if(j<mt.getColumnCount())
               {
                    if(mt.getColumnTypeName(j).equals("NUMBER") || mt.getColumnTypeName(j).equals("INT"))
                    {
                         sql=sql+""+res.getInt(j)+",";
                    }
                    else
                    {
                         sql=sql+"\'"+res.getString(j)+"\'"+",";
                    }
               }
               else
               {
                   if(mt.getColumnTypeName(j).equals("NUMBER") || mt.getColumnTypeName(j).equals("INT"))
                   {
                       sql=sql+""+res.getInt(j);
                   }
                   else
                   {
                       sql=sql+"\'"+res.getString(j)+"\'";
                   }
               }
              }
              //i++;
              sql+=");\n";
              sql1=sql1+sql;
           }
             
             
           w.println(sql1);
           //System.out.println(sql);
           PrintFrame ob=new PrintFrame();
           ob.addText(sql1);
           ob.setVisible(true);
           /*System.out.println("-------"+tname+" table Data ------");
           for(int i=1;i<=mt.getColumnCount();i++)
             System.out.printf("%-10s | ",mt.getColumnName(i));
           while(r.next())
           {
              System.out.println();
              for(int i=1;i<=mt.getColumnCount();i++)
               System.out.printf("%-10s | ",r.getString(i));
           }*/   
        
        w.close();
     }catch(Exception ex) {}    
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(opt.equals("Records"))
        {
             try{
                Reports obr =new Reports(); 
           ResultSet rs = db.Admin.connect(getUser(),getPass(), getHost()).createStatement().executeQuery("select * from "+cmbTables.getSelectedItem().toString()+" order by 1");
           ResultSetMetaData mt = rs.getMetaData();
           for(int i=1;i<=mt.getColumnCount();i++)
             obr.m.addColumn(mt.getColumnName(i));  
           String ar[];
           while(rs.next())
           {
             ar = new String[mt.getColumnCount()];
             for(int i=1;i<=mt.getColumnCount();i++)
               ar[i-1] = rs.getString(i);  
             obr.m.addRow(ar);
           }
           obr.setVisible(true);
        }catch(Exception ex) {}
            
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void addString(Set<String> s)
    {
        Iterator<String> t=s.iterator();
        cmbUsers.removeAllItems();
        cmbUsers.addItem("Select User");
        while(t.hasNext())
            cmbUsers.addItem(t.next());
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatabaseHack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatabaseHack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatabaseHack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatabaseHack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatabaseHack().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbTables;
    private javax.swing.JComboBox cmbUsers;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the User
     */
    public String getUser() {
        return User;
    }

    /**
     * @param User the User to set
     */
    public void setUser(String User) {
        this.User = User;
    }

    /**
     * @return the Pass
     */
    public String getPass() {
        return Pass;
    }

    /**
     * @param Pass the Pass to set
     */
    public void setPass(String Pass) {
        this.Pass = Pass;
    }

    /**
     * @return the Host
     */
    public String getHost() {
        return Host;
    }

    /**
     * @param Host the Host to set
     */
    public void setHost(String Host) {
        this.Host = Host;
    }
}
